{"version":3,"file":"static/js/596.f7c12e3b.chunk.js","mappings":"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","sources":["api/user-api.js","pages/PostDetails/PostDetailsPage.jsx","pages/AlbumDetails/AlbumDetailsPage.jsx","pages/UserDetails/UserCardId/UserCardId.jsx","pages/UserDetails/UserDetailsPage.jsx","styles/CardStyles/CardStyles.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com/\";\n\nexport const getUsers = async () => {\n  const response = await axios.get(\"users\");\n  return response.data;\n};\n\nexport const getUserDetails = async (id) => {\n  const response = await axios.get(`users/${id}`);\n  return response.data;\n};\n\nexport const getPostIdDetails = async (id) => {\n  const response = await axios.get(`users/${id}/posts`);\n  return response.data;\n};\n\nexport const getAlbumDetails = async (id) => {\n  const response = await axios.get(`users/${id}/albums`);\n  return response.data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Avatar, Box, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@mui/material\";\n\nimport { getPostIdDetails } from \"../../api/user-api\";\n\nconst PostDetails = () => {\n    const [post, setPost] = useState([]);\n\n    const { userId } = useParams();\n\n\n      useEffect(() => {\n    if (!userId) return;\n    const getPostDetails = async id => {\n        const receivedDetails = await getPostIdDetails(id);\n        setPost(receivedDetails);\n    };\n    getPostDetails(userId);\n    }, [userId]);\n    \n\n    return (\n        <>\n            <Typography align=\"center\" variant=\"h4\">Post user information</Typography>\n            {!post ? (\n                <div>This post is not found</div>\n            ) : (\n                <Box sx={{ m: 3 }}>\n                    {post.map(({ id, title, body }) => ( \n                    <List sx={{ width: '100%' }} key={id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                            <Avatar alt=\"Remy Sharp\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                            primary={\n                            <>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                >\n                                <Typography component=\"span\" sx={{ fontWeight: 600}}>Title: </Typography>{title}</Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                >\n                                <Typography component=\"span\" sx={{ fontWeight: 600 }}>Body: </Typography>{body}</Typography>\n                            </>\n                            }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </List>\n                    ))}\n\n                </Box>\n            )}\n        </>\n    )\n};\n\nexport default PostDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Avatar, Box, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from \"@mui/material\";\n\nimport { getAlbumDetails } from \"../../api/user-api\";\n\nconst AlbumDetails = () => {\n    const [album, setAlbums] = useState([]);\n\n    const { userId } = useParams();\n\n    useEffect(() => {\n    if (!userId) return;\n    const getAlbumsDetail = async id => {\n        const receivedDetails = await getAlbumDetails(id);\n        setAlbums(receivedDetails);\n    };\n    getAlbumsDetail(userId);\n      }, [userId]);\n    \n\n    return (\n        <>\n        <Typography align=\"center\" variant=\"h4\">Album user information</Typography>\n        {!album ? (\n                <div>This album is not found</div>\n            ) : (\n                <Box sx={{ m: 3 }}>\n                    {album.map(({ id, title }) => (\n                    <List sx={{ width: '100%' }} key={id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                            <Avatar alt=\"Remy Sharp\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                            primary={\n                            <>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                >\n                                    <Typography component=\"span\" sx={{ fontWeight: 600}}>Title: </Typography> {title}\n                                </Typography>\n                            </>\n                            }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </List>\n                    ))}\n\n                </Box>\n            )}\n        </>\n    )\n};\n\nexport default AlbumDetails;","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { CardMedia, Grid, Typography } from \"@mui/material\";\n\nimport { ContainerStyled, CardStyled, CardContentStyled, Title, TextInfo, CardActionStyled, ButtonStyled } from \"../../../styles/CardStyles/CardStyles\";\n\nconst UsersCardId = ({ user }) => {\n    const location = useLocation();\n\n    const { id, name, phone, website } = user;\n        return (\n            <ContainerStyled maxWidth=\"sm\">\n                <Grid container spacing={4}>\n                    <Grid item key={id} xs={14} sm={12} md={10}>\n                        <CardStyled>\n                            <CardMedia\n                                component=\"div\"\n                                sx={{ pt: '56.25%' }}\n                                image=\"https://source.unsplash.com/random?wallpapers\"\n                            />\n                                <CardContentStyled>\n                                    <Title variant='h5'>Additional information</Title>\n                                    <Typography><TextInfo>Id: </TextInfo> {id}</Typography>\n                                    <Typography><TextInfo>Name: </TextInfo> {name}</Typography>\n                                    <Typography><TextInfo>Phone: </TextInfo> {phone}</Typography>\n                                    <Typography><TextInfo>Website: </TextInfo> {website}</Typography>\n                                </CardContentStyled>\n                        <CardActionStyled>\n                            <Link to='posts' state={{ from: location?.state?.from ?? '/' }}><ButtonStyled size=\"small\">Post</ButtonStyled></Link>\n                            <Link to='albums' state={{ from: location?.state?.from ?? '/' }}><ButtonStyled size=\"small\">Album</ButtonStyled></Link>\n                        </CardActionStyled>\n                        </CardStyled>\n                    </Grid>\n                    </Grid>\n            </ContainerStyled>\n        )\n    };\n\nexport default UsersCardId;\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { Link, Route, Routes, useLocation, useParams } from \"react-router-dom\";\nimport { getUserDetails } from \"../../api/user-api\";\nimport PostDetails from \"../PostDetails/PostDetailsPage\";\nimport AlbumDetails from \"../AlbumDetails/AlbumDetailsPage\";\nimport UsersCardId from \"./UserCardId/UserCardId\";\nimport { Button, Typography } from \"@mui/material\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nconst UserDetails = () => {\n    const [user, setUser] = useState([]);\n\n    const { userId } = useParams();\n    const location = useLocation();\n\n\n    useEffect(() => {\n    if (!userId) return;\n    const getUsersDetails = async id => {\n        const receivedDetails = await getUserDetails(id);\n        setUser(receivedDetails);\n    };\n    getUsersDetails(userId);\n    }, [userId]);\n    \n    const backLink = location.state?.from ?? \"/\";\n\n    return (\n        <>\n        {!user ? (\n            <Typography variant=\"h1\">This user is not found</Typography>\n        ) : (\n            <>\n            <Link to={backLink}><Button startIcon={<ArrowBackIcon />} sx={{ml: 6, mt: 3 }}>Go back</Button></Link>\n            <UsersCardId user={user} />\n            </>\n        )}\n            \n        <Suspense fallback={<div>Loading...</div>}>\n            <Routes>\n                <Route path=\"posts\" element={<PostDetails />} />\n                <Route path=\"albums\" element={<AlbumDetails />} />\n            </Routes>\n        </Suspense>\n        </>\n    )\n};\n\nexport default UserDetails;\n","import { Button, Card, CardActions, CardContent, Container, Grid, Typography } from '@mui/material';\n\nimport { styled } from '@mui/system';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerStyled = styled(Container)({\n    margin: '30px',\n    '&.MuiContainer-root': {\n        marginRight: 'auto',\n        marginLeft: 'auto'\n    }\n});\n\nexport const GridContainer = styled(Grid)({\n    '&.MuiGrid-root': {\n        marginRight: 'auto',\n        marginLeft: 'auto'\n    }\n    \n});\n\nexport const Title = styled(Typography)({\n    textAlign: 'center'\n});\n\nexport const HeaderNav = styled(Typography)({\n    display: 'block',\n    paddingLeft: '30px',\n    '&:not(:last-child)': {\n        marginRight: '50px'\n    }\n});\n\nexport const CardStyled = styled(Card)({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n});\n\nexport const CardContentStyled = styled(CardContent)({\n    flexGrow: 1\n});\n\nexport const TextInfo = styled('span')({\n    fontWeight: '700',\n    fontSize: '16px',\n});\n\nexport const LinkStyled = styled(Link)({\n    color: '#2196f3',\n    marginLeft: '10px',\n    marginBottom: '10px'\n});\n\nexport const CardActionStyled = styled(CardActions)({\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '10px',\n    '&.MuiCardActions-root': {\n        paddingBottom: '15px',\n    }\n});\n\nexport const ButtonStyled = styled(Button)({\n    '&.MuiButton-root': {\n        border: '1px solid #2196f3',\n    }\n});\n\n"],"names":["axios","getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","getUserDetails","_ref2","_callee2","id","_context2","concat","_x","getPostIdDetails","_ref3","_callee3","_context3","_x2","getAlbumDetails","_ref4","_callee4","_context4","_x3","_useState","useState","_useState2","_slicedToArray","post","setPost","userId","useParams","useEffect","getPostDetails","receivedDetails","_jsxs","_Fragment","children","_jsx","Typography","align","variant","Box","sx","m","map","title","body","List","width","ListItem","alignItems","ListItemAvatar","Avatar","alt","ListItemText","primary","display","component","color","fontWeight","Divider","album","setAlbums","getAlbumsDetail","_location$state$from","_location$state","_location$state$from2","_location$state2","user","location","useLocation","name","phone","website","ContainerStyled","maxWidth","Grid","container","spacing","item","xs","sm","md","CardStyled","CardMedia","pt","image","CardContentStyled","Title","TextInfo","CardActionStyled","Link","to","state","from","ButtonStyled","size","setUser","getUsersDetails","backLink","Button","startIcon","ArrowBackIcon","ml","mt","UsersCardId","Suspense","fallback","Routes","Route","path","element","PostDetails","AlbumDetails","styled","Container","margin","marginRight","marginLeft","textAlign","paddingLeft","Card","height","flexDirection","CardContent","flexGrow","fontSize","LinkStyled","marginBottom","CardActions","justifyContent","gap","paddingBottom","border"],"sourceRoot":""}